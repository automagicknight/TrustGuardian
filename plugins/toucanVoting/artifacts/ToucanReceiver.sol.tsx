export const ToucanReceiverAbi = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "uint256", name: "votingChainId", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        internalType: "struct IVoteContainer.Tally",
        name: "votes",
        type: "tuple",
      },
      { internalType: "enum ToucanReceiver.ErrReason", name: "reason", type: "uint8" },
    ],
    name: "CannotReceiveVotes",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "dao", type: "address" },
      { internalType: "address", name: "where", type: "address" },
      { internalType: "address", name: "who", type: "address" },
      { internalType: "bytes32", name: "permissionId", type: "bytes32" },
    ],
    name: "DaoUnauthorized",
    type: "error",
  },
  { inputs: [], name: "InvalidDelegate", type: "error" },
  { inputs: [], name: "InvalidEndpointCall", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "proposalRef", type: "uint256" }],
    name: "InvalidProposalReference",
    type: "error",
  },
  { inputs: [], name: "LzTokenUnavailable", type: "error" },
  { inputs: [{ internalType: "uint32", name: "eid", type: "uint32" }], name: "NoPeer", type: "error" },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "NoVotesToSubmit",
    type: "error",
  },
  { inputs: [{ internalType: "uint256", name: "msgValue", type: "uint256" }], name: "NotEnoughNative", type: "error" },
  {
    inputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "address", name: "dao", type: "address" },
    ],
    name: "NothingToRefund",
    type: "error",
  },
  { inputs: [{ internalType: "address", name: "addr", type: "address" }], name: "OnlyEndpoint", type: "error" },
  {
    inputs: [
      { internalType: "uint32", name: "eid", type: "uint32" },
      { internalType: "bytes32", name: "sender", type: "bytes32" },
    ],
    name: "OnlyPeer",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "address", name: "token", type: "address" },
      { internalType: "address", name: "dao", type: "address" },
    ],
    name: "RefundFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address", name: "previousAdmin", type: "address" },
      { indexed: false, internalType: "address", name: "newAdmin", type: "address" },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: "address", name: "beacon", type: "address" }],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint8", name: "version", type: "uint8" }],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address", name: "plugin", type: "address" },
      { indexed: false, internalType: "address", name: "caller", type: "address" },
    ],
    name: "NewVotingPluginSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint32", name: "eid", type: "uint32" },
      { indexed: false, internalType: "bytes32", name: "peer", type: "bytes32" },
    ],
    name: "PeerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "proposalId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "votingChainId", type: "uint256" },
      { indexed: false, internalType: "address", name: "plugin", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct IVoteContainer.Tally",
        name: "votes",
        type: "tuple",
      },
      { indexed: false, internalType: "bytes", name: "revertData", type: "bytes" },
    ],
    name: "SubmitVoteFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "proposalId", type: "uint256" },
      { indexed: false, internalType: "address", name: "plugin", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct IVoteContainer.Tally",
        name: "votes",
        type: "tuple",
      },
    ],
    name: "SubmitVoteSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: "address", name: "implementation", type: "address" }],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint256", name: "proposalId", type: "uint256" },
      { indexed: false, internalType: "uint256", name: "votingChainId", type: "uint256" },
      { indexed: false, internalType: "address", name: "plugin", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct IVoteContainer.Tally",
        name: "votes",
        type: "tuple",
      },
    ],
    name: "VotesReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "OAPP_ADMINISTRATOR_ID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWEEP_COLLECTOR_ID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_PLUGIN_PERMISSION_ID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint32", name: "srcEid", type: "uint32" },
          { internalType: "bytes32", name: "sender", type: "bytes32" },
          { internalType: "uint64", name: "nonce", type: "uint64" },
        ],
        internalType: "struct Origin",
        name: "origin",
        type: "tuple",
      },
    ],
    name: "allowInitializePath",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_proposalId", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        internalType: "struct IVoteContainer.Tally",
        name: "_tally",
        type: "tuple",
      },
    ],
    name: "canReceiveVotes",
    outputs: [
      { internalType: "bool", name: "", type: "bool" },
      { internalType: "enum ToucanReceiver.ErrReason", name: "", type: "uint8" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "composeMsgSender",
    outputs: [{ internalType: "address", name: "sender", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dao",
    outputs: [{ internalType: "contract IDAO", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endpoint",
    outputs: [{ internalType: "contract ILayerZeroEndpointV2", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_proposalId", type: "uint256" }],
    name: "getProposalParams",
    outputs: [
      {
        components: [
          { internalType: "enum IToucanVoting.VotingMode", name: "votingMode", type: "uint8" },
          { internalType: "uint32", name: "supportThreshold", type: "uint32" },
          { internalType: "uint32", name: "startDate", type: "uint32" },
          { internalType: "uint32", name: "endDate", type: "uint32" },
          { internalType: "uint32", name: "snapshotBlock", type: "uint32" },
          { internalType: "uint32", name: "snapshotTimestamp", type: "uint32" },
          { internalType: "uint256", name: "minVotingPower", type: "uint256" },
        ],
        internalType: "struct IToucanVoting.ProposalParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_proposalId", type: "uint256" }],
    name: "getProposalRef",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_proposalId", type: "uint256" },
      {
        components: [
          { internalType: "enum IToucanVoting.VotingMode", name: "votingMode", type: "uint8" },
          { internalType: "uint32", name: "supportThreshold", type: "uint32" },
          { internalType: "uint32", name: "startDate", type: "uint32" },
          { internalType: "uint32", name: "endDate", type: "uint32" },
          { internalType: "uint32", name: "snapshotBlock", type: "uint32" },
          { internalType: "uint32", name: "snapshotTimestamp", type: "uint32" },
          { internalType: "uint256", name: "minVotingPower", type: "uint256" },
        ],
        internalType: "struct IToucanVoting.ProposalParameters",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "getProposalRef",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governanceToken",
    outputs: [{ internalType: "contract IVotes", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_proposalId", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        internalType: "struct IVoteContainer.Tally",
        name: "_tally",
        type: "tuple",
      },
    ],
    name: "hasEnoughVotingPowerForNewVotes",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_governanceToken", type: "address" },
      { internalType: "address", name: "_lzEndpoint", type: "address" },
      { internalType: "address", name: "_dao", type: "address" },
      { internalType: "address", name: "_votingPlugin", type: "address" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_proposalId", type: "uint256" }],
    name: "isProposalOpen",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_proposalRef", type: "uint256" }],
    name: "isProposalRefValid",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint32", name: "srcEid", type: "uint32" },
          { internalType: "bytes32", name: "sender", type: "bytes32" },
          { internalType: "uint64", name: "nonce", type: "uint64" },
        ],
        internalType: "struct Origin",
        name: "_origin",
        type: "tuple",
      },
      { internalType: "bytes32", name: "_guid", type: "bytes32" },
      { internalType: "bytes", name: "_message", type: "bytes" },
      { internalType: "address", name: "_executor", type: "address" },
      { internalType: "bytes", name: "_extraData", type: "bytes" },
    ],
    name: "lzReceive",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint32", name: "", type: "uint32" },
      { internalType: "bytes32", name: "", type: "bytes32" },
    ],
    name: "nextNonce",
    outputs: [{ internalType: "uint64", name: "nonce", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oAppVersion",
    outputs: [
      { internalType: "uint64", name: "senderVersion", type: "uint64" },
      { internalType: "uint64", name: "receiverVersion", type: "uint64" },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint32", name: "", type: "uint32" }],
    name: "peers",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pluginType",
    outputs: [{ internalType: "enum IPlugin.PluginType", name: "", type: "uint8" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_delegate", type: "address" }],
    name: "setDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint32", name: "_eid", type: "uint32" },
      { internalType: "bytes32", name: "_peer", type: "bytes32" },
    ],
    name: "setPeer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_plugin", type: "address" }],
    name: "setVotingPlugin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_proposalId", type: "uint256" }],
    name: "submitVotes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "_interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  { inputs: [], name: "sweepNative", outputs: [], stateMutability: "nonpayable", type: "function" },
  {
    inputs: [{ internalType: "address", name: "_token", type: "address" }],
    name: "sweepToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newImplementation", type: "address" }],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "newImplementation", type: "address" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_proposalId", type: "uint256" }],
    name: "votes",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        internalType: "struct IVoteContainer.Tally",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_proposalId", type: "uint256" },
      { internalType: "uint256", name: "_votingChainId", type: "uint256" },
    ],
    name: "votes",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        internalType: "struct IVoteContainer.Tally",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_proposalId", type: "uint256" },
      { internalType: "uint256", name: "_votingChainId", type: "uint256" },
      { internalType: "address", name: "_votingPlugin", type: "address" },
    ],
    name: "votes",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "abstain", type: "uint256" },
          { internalType: "uint256", name: "yes", type: "uint256" },
          { internalType: "uint256", name: "no", type: "uint256" },
        ],
        internalType: "struct IVoteContainer.Tally",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPlugin",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
] as const;
